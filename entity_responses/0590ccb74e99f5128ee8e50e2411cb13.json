{
  "entity_name": "wifi_getBssLoad",
  "component": "hal",
  "content_hash": "0590ccb74e99f5128ee8e50e2411cb13",
  "response": "**Main purpose and functionality:**\n\nThe `wifi_getBssLoad` function in the RDK HAL component returns the current load of the specified BSS (Basic Service Set). The BSS load is a measure of the amount of traffic currently being sent and received by the BSS.\n\n**Key operations and data flow:**\n\nThe function takes two parameters:\n\n* `apIndex`: The index of the BSS for which to get the load.\n* `enabled`: A pointer to a boolean variable that will receive the current load of the BSS.\n\nThe function first checks if the BSS is valid. If the BSS is not valid, the function returns an error.\n\nIf the BSS is valid, the function gets the current load of the BSS from the driver. The function then stores the load in the variable pointed to by `enabled`.\n\n**Interaction with other components (if any):**\n\nThe `wifi_getBssLoad` function does not interact with any other components.\n\n**Important parameters and return values:**\n\nThe following table describes the important parameters and return values of the `wifi_getBssLoad` function:\n\n| Parameter | Description |\n|---|---|\n| `apIndex` | The index of the BSS for which to get the load. |\n| `enabled` | A pointer to a boolean variable that will receive the current load of the BSS. |\n| Return value | The status of the operation. |\n\nThe return value of the `wifi_getBssLoad` function can be one of the following:\n\n* `RETURN_OK` if the operation was successful.\n* `RETURN_ERR` if the operation failed.\n\n**Any specific RDK-related operations:**\n\nThe `wifi_getBssLoad` function is not specific to RDK.",
  "processed_at": "2024-11-14T12:43:03.694346"
}